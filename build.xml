<?xml version="1.0" encoding="UTF-8"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->
<project name="cookbookServer2" default="docs" basedir="." 
         description="This is an example buildfile for Phing.">

    <property name="propel.bin" value="./vendor/bin/propel" />
    <property name="schema.opt" value="--schema-dir='./conf'" />
    <property name="engine.mysql" value="--mysql-engine='MyISAM'" />
    <property name="platform" value="--platform='${mysql}'" />
    
    <property name="config.dirs" value="./conf/envs/" />
    <property name="config.default" value="${config.dirs}preprod" />
    <property name="buildDir" value="build/www"/>
    <property name="preprodDeployDir" value="/var/www/html/coobookServerPreprod"/>
    
    <target name="build-model">
        <exec command="${propel.bin} model:build --config-dir='${config.default}' ${schema.opt} --output-dir='.'"/>
    </target>
    
    <target name="build-sql">
        <exec command="${propel.bin} sql:build --config-dir='${config.default}' ${engine.mysql} ${schema.opt} --output-dir='./conf/generated-sql' --overwrite"/>
    </target>
    
    <target name="config-convert">
        <exec command="${propel.bin} config:convert --config-dir='${config.dirs}${currentEnv}' --output-dir='./conf/generated-conf/${currentEnv}'"/>
    </target>
    
    <target name="configs-convert">
        <phingcall target="config-convert">
            <property name="currentEnv" value="preprod" />
        </phingcall>
        <phingcall target="config-convert">
            <property name="currentEnv" value="prod" />
        </phingcall>
        <phingcall target="config-convert">
            <property name="currentEnv" value="test" />
        </phingcall>
    </target>
    
    <target name="prepareDatabase">
        <exec command="${propel.bin} sql:insert --config-dir='${config.dirs}${currentEnv}' --sql-dir='./conf/generated-sql'"/>
    </target>
    
    <target name="setupDev">
        <phingcall target="build-model"/>
        <phingcall target="build-sql"/>
        <phingcall target="config-convert">
            <property name="currentEnv" value="dev" />
        </phingcall>
        <phingcall target="config-convert">
            <property name="currentEnv" value="test" />
        </phingcall>
        <phingcall target="prepareDatabase">
            <property name="currentEnv" value="dev" />
        </phingcall>
        <phingcall target="prepareDatabase">
            <property name="currentEnv" value="test" />
        </phingcall>
    </target>
    
    <target name="setupTest">
        <phingcall target="build-model"/>
        <phingcall target="build-sql"/>
        <phingcall target="config-convert">
            <property name="currentEnv" value="test" />
        </phingcall>
        <phingcall target="prepareDatabase">
            <property name="currentEnv" value="test" />
        </phingcall>
    </target>
    
    <target name="setupProd">
        <phingcall target="build-model"/>
        <phingcall target="build-sql"/>
        <phingcall target="config-convert">
            <property name="currentEnv" value="prod" />
        </phingcall>
        <phingcall target="prepareDatabase">
            <property name="currentEnv" value="prod" />
        </phingcall>
    </target>
    
    <target name="setupPreprod">
        <phingcall target="build-model"/>
        <phingcall target="build-sql"/>
        <phingcall target="config-convert">
            <property name="currentEnv" value="preprod" />
        </phingcall>
        <phingcall target="prepareDatabase">
            <property name="currentEnv" value="preprod" />
        </phingcall>
    </target>
    
    <target name="prepare">
        <mkdir dir="docs"/>
    </target>

    <target name="docs">
        <phpdoc title="Phing Example" destdir="docs" output="HTML:Smarty:PHP" linksource="true" quiet="true">
            <fileset dir="src">
                <include name="*.php"/>
            </fileset>
        </phpdoc>
    </target>

    <target name="clean">
        <delete>
            <fileset dir="conf/envs">
                <include name="**/*.dist" />
            </fileset>
        </delete>
        <delete dir="conf/generated-conf"/>
        <delete dir="conf/generated-sql"/>
        <delete dir="reports"/>
        <delete dir="build"/>
        <delete dir="cookbook/cookbook/Base"/>
        <delete dir="cookbook/cookbook/Map"/>
    </target>
    
    
    <target name="test">
        <autoloader autoloaderpath="vendor/autoload.php"/>
        <phpunit printsummary="true" haltonerror="true" haltonfailure="true">
            <formatter todir="reports" type="xml"/>
            <formatter type="plain" usefile="false"/>
            <batchtest>
                <fileset dir="tests">
                    <include name="**/*Test*.php"/>
                    <exclude name="**/Abstract*.php"/>
                </fileset>
            </batchtest>
        </phpunit>
    </target>

    <target name="buildDeploy">
        <mkdir dir="${buildDir}" />
        <copy todir="${buildDir}" >
            <fileset dir="." defaultexcludes="false">
                <include name="conf/**" />
                <include name="cookbook/**" />
                <include name="vendor/**" />
                <include name="build.xml"/>
                <include name="composer.json" />
                <include name="essai.php" />
            </fileset>
        </copy>
    </target>
    
    <target name="updateDependencies">
        <composer command="install" composer="/usr/local/bin/composer.phar"/>
    </target>
    
    
    <target name="deployPreprod" depends="buildDeploy">
        <copy todir="${preprodDeployDir}">
            <fileset dir="${buildDir}" defaultexcludes="false">
                <include name="**/*" />
            </fileset>
        </copy>
        <phing phingfile="build.xml" inheritAll="false" dir="${preprodDeployDir}" target="updateDependencies" />
        <phing phingfile="build.xml" inheritAll="false" dir="${preprodDeployDir}" target="setupPreprod" />
    </target>
    
    <target name="cleanPreprod">
        <delete dir="${preprodDeployDir}"/>
    </target>
</project>
